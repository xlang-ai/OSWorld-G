{
  "name": "steppers",
  "introduction": [
    "# Stepper\n\n<p class=\"description\">Steppers convey progress through numbered steps. It provides a wizard-like workflow.</p>\n\nSteppers display progress through a sequence of logical and numbered steps. They may also be used for navigation.\nSteppers may display a transient feedback message after a step is saved.\n\n- **Types of Steps**: Editable, Non-editable, Mobile, Optional\n- **Types of Steppers**: Horizontal, Vertical, Linear, Non-linear\n\n\n\n:::info\nThis component is no longer documented in the [Material Design guidelines](https://m2.material.io/), but MaterialÂ UI will continue to support it.\n:::"
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Introduction",
      "introduction": [
        "Introduction\n\nThe Stepper component displays progress through a sequence of logical and numbered steps.\nIt supports horizontal and vertical orientation for desktop and mobile viewports.\n\nSteppers are implemented using a collection of related components:\n\n- Stepper: the container for the steps.\n- Step: an individual step in the sequence.\n- Step Label: a label for a Step.\n- Step Content: optional content for a Step.\n- Step Button: optional button for a Step.\n- Step Icon: optional icon for a Step.\n- Step Connector: optional customized connector between Steps."
      ],
      "code_path": [
        null
      ],
      "children": []
    },
    {
      "name": "Basics",
      "introduction": [
        "Basics\n\n```jsx\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\n```"
      ],
      "code_path": [
        null
      ],
      "children": []
    },
    {
      "name": "Horizontal stepper",
      "introduction": [
        "Horizontal stepper\n\nHorizontal steppers are ideal when the contents of one step depend on an earlier step.\n\nAvoid using long step names in horizontal steppers."
      ],
      "code_path": [
        null
      ],
      "children": [
        {
          "name": "Linear",
          "introduction": [
            "Linear\n\nA linear stepper allows the user to complete the steps in sequence.\n\nThe `Stepper` can be controlled by passing the current step index (zero-based) as the `activeStep` prop. `Stepper` orientation is set using the `orientation` prop.\n\nThis example also shows the use of an optional step by placing the `optional` prop on the second `Step` component. Note that it's up to you to manage when an optional step is skipped. Once you've determined this for a particular step you must set `completed={false}` to signify that even though the active step index has gone beyond the optional step, it's not actually complete."
          ],
          "code_path": [
            "HorizontalLinearStepper.js"
          ],
          "children": []
        },
        {
          "name": "Non-linear",
          "introduction": [
            "Non-linear\n\nNon-linear steppers allow the user to enter a multi-step flow at any point.\n\nThis example is similar to the regular horizontal stepper, except steps are no longer automatically set to `disabled={true}` based on the `activeStep` prop.\n\nThe use of the `StepButton` here demonstrates clickable step labels, as well as setting the `completed`\nflag. However because steps can be accessed in a non-linear fashion, it's up to your own implementation to\ndetermine when all steps are completed (or even if they need to be completed)."
          ],
          "code_path": [
            "HorizontalNonLinearStepper.js"
          ],
          "children": []
        },
        {
          "name": "Alternative label",
          "introduction": [
            "Alternative label\n\nLabels can be placed below the step icon by setting the `alternativeLabel` prop on the `Stepper` component."
          ],
          "code_path": [
            "HorizontalLinearAlternativeLabelStepper.js"
          ],
          "children": []
        },
        {
          "name": "Error step",
          "introduction": [
            "Error step"
          ],
          "code_path": [
            "HorizontalStepperWithError.js"
          ],
          "children": []
        },
        {
          "name": "Customized horizontal stepper",
          "introduction": [
            "Customized horizontal stepper\n\nHere is an example of customizing the component.\nYou can learn more about this in the [overrides documentation page](/material-ui/customization/how-to-customize/)."
          ],
          "code_path": [
            "CustomizedSteppers.js"
          ],
          "children": []
        }
      ]
    },
    {
      "name": "Vertical stepper",
      "introduction": [
        "Vertical stepper\n\nVertical steppers are designed for narrow screen sizes. They are ideal for mobile. All the features of the horizontal stepper can be implemented."
      ],
      "code_path": [
        "VerticalLinearStepper.js"
      ],
      "children": [
        {
          "name": "Performance",
          "introduction": [
            "Performance\n\nThe content of a step is unmounted when closed.\nIf you need to make the content available to search engines or render expensive component trees inside your modal while optimizing for interaction responsiveness it might be a good idea to keep the step mounted with:\n\n```jsx\n<StepContent TransitionProps={{ unmountOnExit: false }} />\n```"
          ],
          "code_path": [
            null
          ],
          "children": []
        }
      ]
    },
    {
      "name": "Mobile stepper",
      "introduction": [
        "Mobile stepper\n\nThis component implements a compact stepper suitable for a mobile device. It has more limited functionality than the vertical stepper. See [mobile steps](https://m1.material.io/components/steppers.html#steppers-types-of-steps) for its inspiration.\n\nThe mobile stepper supports three variants to display progress through the available steps: text, dots, and progress."
      ],
      "code_path": [
        null
      ],
      "children": [
        {
          "name": "Text",
          "introduction": [
            "Text\n\nThe current step and total number of steps are displayed as text."
          ],
          "code_path": [
            "TextMobileStepper.js"
          ],
          "children": []
        },
        {
          "name": "Dots",
          "introduction": [
            "Dots\n\nUse dots when the number of steps is small."
          ],
          "code_path": [
            "DotsMobileStepper.js"
          ],
          "children": []
        },
        {
          "name": "Progress",
          "introduction": [
            "Progress\n\nUse a progress bar when there are many steps, or if there are steps that need to be inserted during the process (based on responses to earlier steps)."
          ],
          "code_path": [
            "ProgressMobileStepper.js"
          ],
          "children": []
        }
      ]
    }
  ]
}