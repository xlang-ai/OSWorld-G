{
  "name": "about-the-lab",
  "introduction": [
    "# About the lab\n\n<p class=\"description\">This package hosts the incubator components that are not yet ready to move to the core.</p>\n\nThe main difference between the lab and the core is how the components are versioned. Having a separate lab package allows us to release breaking changes when necessary while the core package follows a [slower-moving policy](https://mui.com/versions/#release-frequency).\n\nAs developers use and test the components and report issues, the maintainers learn more about shortcomings of the components: missing features, accessibility issues, bugs, API design, etc. The older and more used a component is, the less likely it is that new issues will be found and subsequently need to introduce breaking changes.\n\nFor a component to be ready to move to the core, the following criteria are considered:\n\n- It needs to be **used**. We use Google Analytics in the documentation (among other metrics) to evaluate the usage of each component. A lab component with low usage either means that it isn't fully working yet, or that there is low demand for it.\n- It needs to match the **code quality** of the core components. It doesn't have to be perfect to be part of the core, but the component should be reliable enough that developers can depend on it.\n  - Each component needs **type definitions**. It is not currently required that a lab component is typed, but it would need to be typed to move to the core.\n  - Requires good **test coverage**. Some of the lab components don't currently have comprehensive tests.\n- Can it be used as **leverage** to incentivize users to upgrade to the latest major release? The less fragmented the community is, the better.\n- It needs to have a low probability of a **breaking change** in the short/medium future. For instance, if it needs a new feature that will likely require a breaking change, it may be preferable to delay its promotion to the core."
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Installation",
      "introduction": [
        "Installation\n\nTo install and save in your `package.json` dependencies, run one of the following commands:\n\n<!-- #default-branch-switch -->\n\n<codeblock storageKey=\"package-manager\">\n\n```bash npm\nnpm install @mui/lab @mui/material\n```\n\n```bash pnpm\npnpm add @mui/lab @mui/material\n```\n\n```bash yarn\nyarn add @mui/lab @mui/material\n```\n\n</codeblock>\n\nNote that the lab has a peer dependency on the MaterialÂ UI components."
      ],
      "code_path": [
        null
      ],
      "children": []
    },
    {
      "name": "TypeScript",
      "introduction": [
        "TypeScript\n\nIn order to benefit from the [CSS overrides](/material-ui/customization/theme-components/#theme-style-overrides) and [default prop customization](/material-ui/customization/theme-components/#theme-default-props) with the theme, TypeScript users need to import the following types. Internally, it uses [module augmentation](/material-ui/guides/typescript/#customization-of-theme) to extend the default theme structure with the extension components available in the lab.\n\n```tsx\nimport type {} from '@mui/lab/themeAugmentation';\n\nconst theme = createTheme({\n  components: {\n    MuiTimeline: {\n      styleOverrides: {\n        root: {\n          backgroundColor: 'red',\n        },\n      },\n    },\n  },\n});\n```"
      ],
      "code_path": [
        null
      ],
      "children": []
    }
  ]
}