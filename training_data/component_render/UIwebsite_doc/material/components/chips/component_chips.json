{
  "name": "chips",
  "introduction": [
    "# Chip\n\n<p class=\"description\">Chips are compact elements that represent an input, attribute, or action.</p>\n\nChips allow users to enter information, make selections, filter content, or trigger actions.\n\nWhile included here as a standalone component, the most common use will\nbe in some form of input, so some of the behavior demonstrated here is\nnot shown in context."
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Basic chip",
      "introduction": [
        "Basic chip\n\nThe `Chip` component supports outlined and filled styling."
      ],
      "code_path": [
        "BasicChips.js"
      ],
      "children": []
    },
    {
      "name": "Chip actions",
      "introduction": [
        "Chip actions\n\nYou can use the following actions.\n\n- Chips with the `onClick` prop defined change appearance on focus, hover, and click.\n- Chips with the `onDelete` prop defined will display a delete icon which changes appearance on hover."
      ],
      "code_path": [
        null
      ],
      "children": [
        {
          "name": "Clickable",
          "introduction": [
            "Clickable"
          ],
          "code_path": [
            "ClickableChips.js"
          ],
          "children": []
        },
        {
          "name": "Deletable",
          "introduction": [
            "Deletable"
          ],
          "code_path": [
            "DeletableChips.js"
          ],
          "children": []
        },
        {
          "name": "Clickable and deletable",
          "introduction": [
            "Clickable and deletable"
          ],
          "code_path": [
            "ClickableAndDeletableChips.js"
          ],
          "children": []
        },
        {
          "name": "Clickable link",
          "introduction": [
            "Clickable link"
          ],
          "code_path": [
            "ClickableLinkChips.js"
          ],
          "children": []
        },
        {
          "name": "Custom delete icon",
          "introduction": [
            "Custom delete icon"
          ],
          "code_path": [
            "CustomDeleteIconChips.js"
          ],
          "children": []
        }
      ]
    },
    {
      "name": "Chip adornments",
      "introduction": [
        "Chip adornments\n\nYou can add ornaments to the beginning of the component.\n\nUse the `avatar` prop to add an avatar or use the `icon` prop to add an icon."
      ],
      "code_path": [
        null
      ],
      "children": [
        {
          "name": "Avatar chip",
          "introduction": [
            "Avatar chip"
          ],
          "code_path": [
            "AvatarChips.js"
          ],
          "children": []
        },
        {
          "name": "Icon chip",
          "introduction": [
            "Icon chip"
          ],
          "code_path": [
            "IconChips.js"
          ],
          "children": []
        }
      ]
    },
    {
      "name": "Color chip",
      "introduction": [
        "Color chip\n\nYou can use the `color` prop to define a color from theme palette."
      ],
      "code_path": [
        "ColorChips.js"
      ],
      "children": []
    },
    {
      "name": "Sizes chip",
      "introduction": [
        "Sizes chip\n\nYou can use the `size` prop to define a small Chip."
      ],
      "code_path": [
        "SizesChips.js"
      ],
      "children": []
    },
    {
      "name": "Multiline chip",
      "introduction": [
        "Multiline chip\n\nBy default, Chips displays labels only in a single line.\nTo have them support multiline content, use the `sx` prop to add `height:auto` to the Chip component, and `whiteSpace: normal` to the `label` styles."
      ],
      "code_path": [
        "MultilineChips.js"
      ],
      "children": []
    },
    {
      "name": "Chip array",
      "introduction": [
        "Chip array\n\nAn example of rendering multiple chips from an array of values.\nDeleting a chip removes it from the array. Note that since no\n`onClick` prop is defined, the `Chip` can be focused, but does not\ngain depth while clicked or touched."
      ],
      "code_path": [
        "ChipsArray.js"
      ],
      "children": []
    },
    {
      "name": "Chip playground",
      "introduction": [
        "Chip playground"
      ],
      "code_path": [
        "ChipsPlayground.js"
      ],
      "children": []
    },
    {
      "name": "Accessibility",
      "introduction": [
        "Accessibility\n\nIf the Chip is deletable or clickable then it is a button in tab order. When the Chip is focused (for example when tabbing) releasing (`keyup` event) `Backspace` or `Delete` will call the `onDelete` handler while releasing `Escape` will blur the Chip."
      ],
      "code_path": [
        null
      ],
      "children": []
    }
  ]
}