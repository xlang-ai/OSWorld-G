{
  "name": "image-list",
  "introduction": [
    "# Image List\n\n<p class=\"description\">The Image List displays a collection of images in an organized grid.</p>\n\nImage lists represent a collection of items in a repeated pattern. They help improve the visual comprehension of the content they hold."
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Standard image list",
      "introduction": [
        "Standard image list\n\nStandard image lists are best for items of equal importance. They have a uniform container size, ratio, and spacing."
      ],
      "code_path": [
        "StandardImageList.js"
      ],
      "children": []
    },
    {
      "name": "Quilted image list",
      "introduction": [
        "Quilted image list\n\nQuilted image lists emphasize certain items over others in a collection. They create hierarchy using varied container sizes and ratios."
      ],
      "code_path": [
        "QuiltedImageList.js"
      ],
      "children": []
    },
    {
      "name": "Woven image list",
      "introduction": [
        "Woven image list\n\nWoven image lists use alternating container ratios to create a rhythmic layout. A woven image list is best for browsing peer content."
      ],
      "code_path": [
        "WovenImageList.js"
      ],
      "children": []
    },
    {
      "name": "Masonry image list",
      "introduction": [
        "Masonry image list\n\nMasonry image lists use dynamically sized container heights that reflect the aspect ratio of each image. This image list is best used for browsing uncropped peer content."
      ],
      "code_path": [
        "MasonryImageList.js"
      ],
      "children": []
    },
    {
      "name": "Image list with title bars",
      "introduction": [
        "Image list with title bars\n\nThis example demonstrates the use of the `ImageListItemBar` to add an overlay to each item.\nThe overlay can accommodate a `title`, `subtitle` and secondary action - in this example an `IconButton`."
      ],
      "code_path": [
        "TitlebarImageList.js"
      ],
      "children": [
        {
          "name": "Title bar below image (standard)",
          "introduction": [
            "Title bar below image (standard)\n\nThe title bar can be placed below the image."
          ],
          "code_path": [
            "TitlebarBelowImageList.js"
          ],
          "children": []
        },
        {
          "name": "Title bar below image (masonry)",
          "introduction": [
            "Title bar below image (masonry)"
          ],
          "code_path": [
            "TitlebarBelowMasonryImageList.js"
          ],
          "children": []
        }
      ]
    },
    {
      "name": "Custom image list",
      "introduction": [
        "Custom image list\n\nIn this example the items have a customized titlebar, positioned at the top and with a custom gradient `titleBackground`.\nThe secondary action `IconButton` is positioned on the left. The `gap` prop is used to adjust the gap between items."
      ],
      "code_path": [
        "CustomImageList.js"
      ],
      "children": []
    }
  ]
}