{
  "name": "data-grid->column-menu",
  "introduction": [
    "# Data Grid - Column menu\n\n<p class=\"description\">Customize your columns menu.</p>"
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Column menu",
      "introduction": [
        "Column menu\n\nEach column header comes with a column menu with quickly accessible Data Grid features like column visibility, sorting, filtering, and others.\n\nIt can be accessed by clicking on the 3-dots icon that appears on hover on a header cell or when focusing on a column header and pressing <kbd><kbd class=\"key\">Ctrl</kbd>+<kbd class=\"key\">Enter</kbd></kbd> (or <kbd><kbd class=\"key\">âŒ˜ Command</kbd>+<kbd class=\"key\">Enter</kbd></kbd> on macOS)."
      ],
      "code_path": [
        "ColumnMenuGrid.js"
      ],
      "children": []
    },
    {
      "name": "Customize column menu items",
      "introduction": [
        "Customize column menu items\n\nYou can customize the column menu items by passing the `slots` and `slotProps` props to the `<GridColumnMenu />` component:\n\n- `slots` - use this prop to override default column menu slots or add new slots.\n- `slotProps` - use this prop to override or pass [`displayOrder`](/x/react-data-grid/column-menu/#reordering-menu-items) for column menu items. You can also use this to pass extra props to custom column menu slots."
      ],
      "code_path": [
        null
      ],
      "children": [
        {
          "name": "Adding a menu item",
          "introduction": [
            "Adding a menu item\n\nTo add a new menu item, create a new item slot and pass it to the `slots` prop. In the example below, the new slot is called `columnMenuUserItem` but you can choose any name and it'll be added to the menu automatically.\nYou can also set the `displayOrder` (default `100`) or pass new props to the slots using the `slotProps` prop.\n\n```tsx\nfunction CustomColumnMenu(props: GridColumnMenuProps) {\n  return (\n    <GridColumnMenu\n      {...props}\n      slots={{\n        // Add new item\n        columnMenuUserItem: CustomUserItem,\n      }}\n      slotProps={{\n        columnMenuUserItem: {\n          // set `displayOrder` for the new item\n          displayOrder: 15,\n          // Additional props\n          myCustomValue: 'Do custom action',\n          myCustomHandler: () => alert('Custom handler fired'),\n        },\n      }}\n    />\n  );\n}\n```"
          ],
          "code_path": [
            "AddNewColumnMenuGrid.js"
          ],
          "children": []
        },
        {
          "name": "Overriding default menu items",
          "introduction": [
            "Overriding default menu items\n\nUse the `slots` prop to override default menu items.\nCheck [this table](/x/react-data-grid/column-menu/#default-column-menu-items) to know the overridable slot name for each menu item.\n\n```tsx\nfunction CustomColumnMenu(props: GridColumnMenuProps) {\n  return (\n    <GridColumnMenu\n      {...props}\n      slots={{\n        // Override `columnMenuFilterItem` component\n        columnMenuFilterItem: CustomFilterItem,\n      }}\n    />\n  );\n}\n```"
          ],
          "code_path": [
            "OverrideColumnMenuGrid.js"
          ],
          "children": []
        },
        {
          "name": "Hiding a menu item",
          "introduction": [
            "Hiding a menu item\n\nTo hide a menu item, you can set its respective slot in `slots` to `null`.\nCheck [this table](/x/react-data-grid/column-menu/#default-column-menu-items) to know the slot name for each menu item.\n\n```tsx\nfunction CustomColumnMenu(props: GridColumnMenuProps) {\n  return (\n    <GridColumnMenu\n      {...props}\n      slots={{\n        // Hide `columnMenuColumnsItem`\n        columnMenuColumnsItem: null,\n      }}\n    />\n  );\n}\n```"
          ],
          "code_path": [
            "HideColumnMenuGrid.js"
          ],
          "children": []
        },
        {
          "name": "Reordering menu items",
          "introduction": [
            "Reordering menu items\n\nEvery item is assigned a `displayOrder` based on which it is shown before or after other items. It works in ascending order; the smaller the number is, the earlier it is displayed on the list. For new items default value for `displayOrder` is **100**.\n\nYou can override `displayOrder` for the default or new items in `slotProps`.\n\nCheck [this table](/x/react-data-grid/column-menu/#default-column-menu-items) to see default `displayOrder` for each menu item.\n\n```tsx\nfunction CustomColumnMenu(props: GridColumnMenuProps) {\n  return (\n    <GridColumnMenu\n      {...props}\n      slotProps={{\n        // Swap positions of filter and sort items\n        columnMenuFilterItem: {\n          displayOrder: 0, // Previously `10`\n        },\n        columnMenuSortItem: {\n          displayOrder: 10, // Previously `0`\n        },\n      }}\n    />\n  );\n}\n```"
          ],
          "code_path": [
            "ReorderColumnMenuGrid.js"
          ],
          "children": []
        },
        {
          "name": "Default column menu items",
          "introduction": [
            "Default column menu items\n\nAs a reference, here are the column menu `slots` along with the default item components and `displayOrder`."
          ],
          "code_path": [
            "ColumnMenuGridReferencesNoSnap.js"
          ],
          "children": []
        }
      ]
    },
    {
      "name": "Custom menu component",
      "introduction": [
        "Custom menu component\n\nYou can also customize and replace the column menu by [passing a fully custom component](/x/react-data-grid/components/#component-slots) to the `columnMenu` slot of the Data Grid. If you want to add some of the default menu items to your custom component, you can import and re-use them.",
        ":::info\n<strong>Tip</strong>: The `columnMenu` component and its components slots receive the `colDef` prop corresponding to the current column; you can use this to conditionally render some items or change some logic.\n:::"
      ],
      "code_path": [
        "CustomColumnMenuGrid.js",
        null
      ],
      "children": []
    },
    {
      "name": "Disable column menu",
      "introduction": [
        "Disable column menu\n\nBy default, each column header has the column menu enabled. To disable the column menu, set the prop `disableColumnMenu={true}`."
      ],
      "code_path": [
        "DisabledColumnMenuGrid.js"
      ],
      "children": []
    },
    {
      "name": "Column menu with Pro/Premium features [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')",
      "introduction": [
        "Column menu with Pro/Premium features [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n\nIn the following demo, in addition to Data Grid MIT features, you can see commercial features like [grouping](/x/react-data-grid/row-grouping/), and [aggregation](/x/react-data-grid/aggregation/) in action. Try tweaking the values from respective column menu items."
      ],
      "code_path": [
        "ColumnMenuGridPremium.js"
      ],
      "children": []
    },
    {
      "name": "API",
      "introduction": [
        "API\n\n- [DataGrid](/x/api/data-grid/data-grid/)\n- [DataGridPro](/x/api/data-grid/data-grid-pro/)\n- [DataGridPremium](/x/api/data-grid/data-grid-premium/)"
      ],
      "code_path": [
        null
      ],
      "children": []
    }
  ]
}