{
  "name": "data-grid->performance",
  "introduction": [
    "# Data Grid - Performance\n\n<p class=\"description\">Improve the performance of the DataGrid using the recommendations from this guide.</p>"
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Extract static objects and memoize root props",
      "introduction": [
        "Extract static objects and memoize root props\n\nThe Data Grid component uses `React.memo` to optimize its performance, which means itself and its subcomponents only\nre-render when their props change. But it's very easy to cause unnecessary re-renders if the root props of your\nData Grid aren't memoized. Take the example below, the `slots` and `initialState` objects are re-created on every\nrender, which means the Data Grid itself has no choice but to re-render as well.\n\n```tsx\nfunction Component(props) {\n  return (\n    <DataGrid\n      rows={props.rows}\n      slots={{\n        row: CustomRow,\n      }}\n      cellModesModel={{ [props.rows[0].id]: { name: { mode: GridCellModes.Edit } } }}\n    />\n  );\n}\n```\n\nAn easy way to prevent re-renders is to extract any object that can be a static object, and to memoize any object that\ndepends on another object. This applies to any prop that is an object or a function.\n\n```tsx\nconst slots = {\n  row: CustomRow,\n};\n\nfunction Component(props) {\n  const cellModesModel = React.useMemo(\n    () => ({ [props.rows[0].id]: { name: { mode: GridCellModes.Edit } } }),\n    [props.rows],\n  );\n\n  return (\n    <DataGrid rows={props.rows} slots={slots} cellModesModel={cellModesModel} />\n  );\n}\n```"
      ],
      "code_path": [
        null
      ],
      "children": []
    },
    {
      "name": "Visualization",
      "introduction": [
        "Visualization\n\nThe DataGrid memoizes some of its subcomponents to avoid re-rendering more than needed. Below is a visualization that\nshows you which cells re-render in reaction to your interaction with the grid."
      ],
      "code_path": [
        "GridVisualization.js"
      ],
      "children": []
    },
    {
      "name": "API",
      "introduction": [
        "API\n\n- [DataGrid](/x/api/data-grid/data-grid/)\n- [DataGridPro](/x/api/data-grid/data-grid-pro/)\n- [DataGridPremium](/x/api/data-grid/data-grid-premium/)"
      ],
      "code_path": [
        null
      ],
      "children": []
    }
  ]
}