{
  "name": "label",
  "introduction": [
    "# Charts - Label\n\n<p class=\"description\">Label is the text reference of a series or data.</p>"
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Basic display",
      "introduction": [
        "Basic display\n\nTo set a series' label, you can pass in a `string` as a series' property `label`.\nThe provided label will be visible at different locations such as the legend, or the tooltip.\n\n:::info\nThe Pie chart has some specificity described in its [own section](#pie).\n:::"
      ],
      "code_path": [
        "BasicLabel.js"
      ],
      "children": []
    },
    {
      "name": "Conditional formatting",
      "introduction": [
        "Conditional formatting\n\nThe `label` property also accepts a `function` allowing you to change the label content based on location.\n\nThe function receives `location` as its first argument which can have the following values:\n\n- `'legend'` to format the label in the [Legend](/x/react-charts/legend/)\n- `'tooltip'` to format the label in the [Tooltip](/x/react-charts/tooltip/)"
      ],
      "code_path": [
        "FunctionLabel.js"
      ],
      "children": []
    },
    {
      "name": "Pie",
      "introduction": [
        "Pie\n\nThe [Pie](/x/react-charts/pie/) chart behaves differently due to its nature.\nIt has labels per slice instead of per series.\nIt also has one more place where the label can be rendered.\n\nInstead of receiving the `label` as part of the series.\nIt instead receives it as part of the `data` set inside a series.\n\nIts `location` argument can have the following values:\n\n- `'legend'` to format the label in the [Legend](/x/react-charts/legend/)\n- `'tooltip'` to format the label in the [Tooltip](/x/react-charts/tooltip/)\n- `'arc'` to format the [Arc label](/x/react-charts/pie/#labels) when `arcLabel` is set to `'label'`"
      ],
      "code_path": [
        "PieLabel.js"
      ],
      "children": []
    }
  ]
}