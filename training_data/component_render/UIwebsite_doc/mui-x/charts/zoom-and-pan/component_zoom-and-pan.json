{
  "name": "zoom-and-pan",
  "introduction": [
    "# Charts - Zooming and panning [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n\n<p class=\"description\">Enables zooming and panning on specific charts or axis.</p>\n\nZooming is possible on the **Pro**[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan') versions of the charts: `<LineChartPro />`, `<BarChartPro />`, `<ScatterChartPro />`."
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Basic usage",
      "introduction": [
        "Basic usage\n\nTo enable zooming and panning, set the `zoom` prop to `true` on the wanted axis.\n\nEnabling zoom will enable all the interactions, which are made to be as intuitive as possible.\n\nThe following actions are supported:\n\n- **Scroll**: Zoom in/out by scrolling the mouse wheel.\n- **Drag**: Pan the chart by dragging the mouse.\n- **Pinch**: Zoom in/out by pinching the chart.",
        "",
        ""
      ],
      "code_path": [
        "ZoomScatterChart.js",
        "ZoomBarChart.js",
        "ZoomLineChart.js"
      ],
      "children": []
    },
    {
      "name": "Zooming options",
      "introduction": [
        "Zooming options\n\nYou can customize the zooming behavior by setting the `zoomOptions` prop.\n\nThe following options are available:\n\n- **minStart**: The starting percentage of the axis range. Between 0 and 100.\n- **maxEnd**: The ending percentage of the zoom range.\n- **step**: The step of the zooming function. Defines the granularity of the zoom.\n- **minSpan**: Restricts the minimum span size.\n- **maxSpan**: Restricts the maximum span size.\n- **panning**: Enables or disables panning."
      ],
      "code_path": [
        "ZoomOptionsNoSnap.js"
      ],
      "children": []
    },
    {
      "name": "Zoom filtering",
      "introduction": [
        "Zoom filtering\n\nYou can make the zoom of an axis affect one or more axes extremums by setting the `zoom.filterMode` prop on the axis config.\n\n- If `zoom.filterMode` is set to `\"discard\"` the data points outside the visible range of this axis are filtered out and the other axes will modify their zoom range to fit the visible ones.\n- If `zoom.filterMode` is set to `\"keep\"` (default) the data points outside the visible range are kept. Then, other axes will not be impacted.\n\nSee how the secondary axis adapts to the visible part of the primary axis in the following example."
      ],
      "code_path": [
        "ZoomFilterMode.js"
      ],
      "children": []
    },
    {
      "name": "External zoom management",
      "introduction": [
        "External zoom management\n\nYou can manage the zoom state by two means:\n\n- By defining an initial state with the `initialZoom` prop.\n- By imperatively set a zoom value with the `setZoomData` method of the public api.\n\nIn addition, the `onZoomChange` prop is a function that receives the new zoom state.\n\nThe `zoom` state is an array of objects that define the zoom state for each axis with zoom enabled.\n\n- **axisId**: The id of the axis to control.\n- **start**: The starting percentage of the axis range.\n- **end**: The ending percentage of the zoom range."
      ],
      "code_path": [
        "ZoomControlled.js"
      ],
      "children": []
    }
  ]
}