{
  "name": "migration->migration-pickers-lab",
  "introduction": [
    "# Migration from the lab\n\n<p class=\"description\">Material UI Date and Time Pickers are now available on MUI X!</p>"
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Introduction",
      "introduction": [
        "Introduction\n\nThis is a reference for migrating your site's pickers from `@mui/lab` to `@mui/x-date-pickers` or `@mui/x-date-pickers-pro`.\nThis migration is about the npm packages used, it **does not** affect the behavior of the components in your application.\nYou can find why we are moving in this direction in the [announcement blog post](/blog/lab-date-pickers-to-mui-x/)."
      ],
      "code_path": [
        null
      ],
      "children": []
    },
    {
      "name": "License",
      "introduction": [
        "License\n\nMost of our components remains MIT and are accessible for free in `@mui/x-date-pickers`.\n\nThe range-picker components: `DateRangePicker`, `DateRangePickerDay`, `DesktopDateRangePicker`, `MobileDateRangePicker` and `StaticDateRangePicker`\nwere marked as \"intended for MUI X Pro\" in our documentation and are now part of MUI X Pro.\n\nIf you are using one of these components, you will have to take a Pro license in order to migrate to `@mui/x-date-pickers-pro` (see the [Pricing](https://mui.com/pricing/) page for more information).\n\n:::info\nIf you already have a license for `@mui/x-data-grid-pro`, you can use the same one for `@mui/x-date-pickers-pro` with no additional fee!\n:::"
      ],
      "code_path": [
        null
      ],
      "children": []
    },
    {
      "name": "Migration steps",
      "introduction": [
        "Migration steps"
      ],
      "code_path": [
        null
      ],
      "children": [
        {
          "name": "1. Install MUI X packages",
          "introduction": [
            "1. Install MUI X packages"
          ],
          "code_path": [
            null
          ],
          "children": [
            {
              "name": "Community plan",
              "introduction": [
                "Community plan\n\n<codeblock storageKey=\"package-manager\">\n\n```bash npm\nnpm install @mui/x-date-pickers\n```\n\n```bash pnpm\npnpm add @mui/x-date-pickers\n```\n\n```bash yarn\nyarn add @mui/x-date-pickers\n```\n\n</codeblock>"
              ],
              "code_path": [
                null
              ],
              "children": []
            },
            {
              "name": "Pro plan",
              "introduction": [
                "Pro plan\n\n<codeblock storageKey=\"package-manager\">\n\n```bash npm\nnpm install @mui/x-date-pickers-pro @mui/x-license-pro\n```\n\n```bash pnpm\npnpm add @mui/x-date-pickers-pro @mui/x-license-pro\n```\n\n```bash yarn\nyarn add @mui/x-date-pickers-pro @mui/x-license-pro\n```\n\n</codeblock>\n\nWhen you purchase a commercial license, you'll receive a license key by email.\nYou must set the license key before rendering the first component.\n\n```jsx\nimport { LicenseInfo } from '@mui/x-license-pro';\n\nLicenseInfo.setLicenseKey('YOUR_LICENSE_KEY');\n```\n\nLearn more on [the Licensing page](/x/introduction/licensing/#license-key)."
              ],
              "code_path": [
                null
              ],
              "children": []
            }
          ]
        },
        {
          "name": "2. Run the code mod",
          "introduction": [
            "2. Run the code mod\n\nWe have prepared a codemod to help you migrate your codebase.\n\nYou can either run it on a specific file, folder, or your entire codebase when choosing the `<path>` argument.\n\n```bash\nnpx @mui/codemod v5.0.0/date-pickers-moved-to-x <path>\n```\n\nWhich will transform the imports like this:\n\n```diff\n-import DatePicker from '@mui/lab/DatePicker';\n+import { DatePicker } from '@mui/x-date-pickers/DatePicker';\n\n-import DateRangePicker from '@mui/lab/DateRangePicker';\n+import { DateRangePicker } from '@mui/x-date-pickers-pro/DateRangePicker';\n\n-import { DatePicker, DateRangePicker } from '@mui/lab';\n+import { DatePicker } from '@mui/x-date-pickers'; // DatePicker is also available in `@mui/x-date-pickers-pro`\n+import { DateRangePicker } from '@mui/x-date-pickers-pro';\n```\n\nComponents of the Community plan such as `<DatePicker />` can be imported from both `@mui/x-date-pickers-pro` and `@mui/x-date-pickers`.\n[Date adapters](/x/react-date-pickers/getting-started/#installation) such as `AdapterDayjs` can only be imported from `@mui/x-date-pickers/[adapterName]`."
          ],
          "code_path": [
            null
          ],
          "children": []
        },
        {
          "name": "3. Handle breaking changes introduced in alpha",
          "introduction": [
            "3. Handle breaking changes introduced in alpha\n\nDuring the migration from `@mui/lab` to MUI X, we've focused on enhancing stability and developer experience.\nSome APIs were improved to be more coherent and customizable.\n\nPlease check the complete list of the API changes before migrating from `@mui/x-date-pickers` 5.0.0-alpha.0 to the last v5.0.0."
          ],
          "code_path": [
            null
          ],
          "children": [
            {
              "name": "Props renaming",
              "introduction": [
                "Props renaming\n\nThe `disableCloseOnSelect` prop has been replaced by a new `closeOnSelect` prop which has the opposite behavior.\nThe default behavior remains the same (close after the last step on desktop but not on mobile).\n\n```diff\n // If you don't want to close after the last step\n-<DatePicker disableCloseOnSelect={false} />\n+<DatePicker closeOnSelect />\n\n // If you want to close after the last step\n-<DatePicker disableCloseOnSelect />\n+<DatePicker closeOnSelect={false} />\n```\n\nThe props of `MonthPicker`, `YearPicker` and `DayPicker` have been reworked to make them more consistent for a standalone usage.\n\n- **MonthPicker**: The prop `onMonthChange` has been removed, you can use `onChange` instead since every change is a month change.\n- **YearPicker**: The prop `onYearChange` has been removed, you can use `onChange` instead since every change is a year change.\n- **DayPicker**: The prop `isDateDisabled` has been removed, you can now use the same validation props as for the other components (`maxDate`, `minDate`, `shouldDisableDate`, `disableFuture` and `disablePast`)."
              ],
              "code_path": [
                null
              ],
              "children": []
            },
            {
              "name": "Translation",
              "introduction": [
                "Translation\n\nProps for translation have been either deprecated or removed in favor of a [global localization](/x/react-date-pickers/localization/) similar to the one used by the Data Grid.\nWe already have ten locales provided by the community. (Thank you!)"
              ],
              "code_path": [
                null
              ],
              "children": []
            },
            {
              "name": "Use slot for `ActionBar`",
              "introduction": [
                "Use slot for `ActionBar`\n\nThe props related to the action bar buttons (`clearable`, `showTodayButton`, `cancelText`, `okText`) have been removed.\n\nTo decide which button must be displayed and in which order, you can now use the `actions` prop of the `actionBar` component slot props.\n\n```jsx\n<DatePicker\n  componentsProps={{\n    // The actions will be the same between desktop and mobile\n    actionBar: {\n      actions: ['clear'],\n    },\n    // The actions will be different between desktop and mobile\n    actionBar: ({ wrapperVariant }) => ({\n      actions: wrapperVariant === 'desktop' ? [] : ['clear'],\n    }),\n  }}\n/>\n```\n\nThe build-in `ActionBar` component supports 4 different actions: `'clear'`, `'cancel'`, `'accept'`, and `'today'`.\nBy default, the pickers will render the cancel and accept button on mobile and no action on desktop.\n\nIf you need other actions, you can provide your own component to the `ActionBar` component slot\n\n```jsx\n<DatePicker components={{ ActionBar: CustomActionBar }} />\n```"
              ],
              "code_path": [
                null
              ],
              "children": []
            }
          ]
        }
      ]
    }
  ]
}