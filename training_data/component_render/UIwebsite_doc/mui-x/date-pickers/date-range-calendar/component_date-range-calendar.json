{
  "name": "date-range-calendar",
  "introduction": [
    "# Date Range Calendar [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n\n<p class=\"description\">The Date Range Calendar lets the user select a range of dates without any input or popper / modal.</p>"
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Basic usage",
      "introduction": [
        "Basic usage"
      ],
      "code_path": [
        "BasicDateRangeCalendar.js"
      ],
      "children": []
    },
    {
      "name": "Uncontrolled vs. controlled value",
      "introduction": [
        "Uncontrolled vs. controlled value\n\nThe value of the component can be uncontrolled or controlled.",
        ":::info\n\n- The value is **controlled** when its parent manages it by providing a `value` prop.\n- The value is **uncontrolled** when it is managed by the component's own internal state. This state can be initialized using the `defaultValue` prop.\n\nLearn more about the _Controlled and uncontrolled_ pattern in the [React documentation](https://react.dev/learn/sharing-state-between-components#controlled-and-uncontrolled-components).\n:::"
      ],
      "code_path": [
        "DateRangeCalendarValue.js",
        null
      ],
      "children": []
    },
    {
      "name": "Form props",
      "introduction": [
        "Form props\n\nThe component can be disabled or read-only."
      ],
      "code_path": [
        "DateRangeCalendarFormProps.js"
      ],
      "children": []
    },
    {
      "name": "Customization",
      "introduction": [
        "Customization"
      ],
      "code_path": [
        null
      ],
      "children": [
        {
          "name": "Choose the months to render",
          "introduction": [
            "Choose the months to render\n\nYou can render up to 3 months at the same time using the `calendars` prop:",
            "You can choose the position the current month is rendered in using the `currentMonthCalendarPosition` prop.\nThis can be useful when using `disableFuture` to render the current month and the month before instead of the current month and the month after."
          ],
          "code_path": [
            "DateRangeCalendarCalendarsProp.js",
            "DateRangeCalendarCurrentMonthCalendarPositionProp.js"
          ],
          "children": []
        },
        {
          "name": "Custom day rendering",
          "introduction": [
            "Custom day rendering\n\nThe displayed days are customizable with the `Day` component slot.\nYou can take advantage of the [DateRangePickerDay](/x/api/date-pickers/date-range-picker-day/) component."
          ],
          "code_path": [
            "CustomDateRangePickerDay.js"
          ],
          "children": []
        }
      ]
    },
    {
      "name": "Localization",
      "introduction": [
        "Localization\n\nSee the [Date format and localization](/x/react-date-pickers/adapters-locale/) and [Translated components](/x/react-date-pickers/localization/) documentation pages for more details."
      ],
      "code_path": [
        null
      ],
      "children": []
    },
    {
      "name": "Validation",
      "introduction": [
        "Validation\n\nSee the [Validation](/x/react-date-pickers/validation/) documentation page for more details."
      ],
      "code_path": [
        null
      ],
      "children": []
    }
  ]
}