{
  "name": "custom-opening-button",
  "introduction": [
    "# Custom opening button\n\n<p class=\"description\">The date picker lets you customize the button to open the views.</p>\n\n:::success\nSee [Common conceptsâ€”Slots and subcomponents](/x/common-concepts/custom-components/) to learn how to use slots.\n:::"
  ],
  "code_path": [
    null
  ],
  "children": [
    {
      "name": "Set a custom opening icon",
      "introduction": [
        "Set a custom opening icon\n\nIf you want to change the icon opening the picker without changing its behavior, you can use the `openPickerIcon` slot:",
        "You can also change the icon rendered based on the current status of the picker:"
      ],
      "code_path": [
        "CustomOpeningIcon.js",
        "CustomOpeningIconConditional.js"
      ],
      "children": []
    },
    {
      "name": "Pass props to the opening button",
      "introduction": [
        "Pass props to the opening button\n\nIf you want to customize the opening button without redefining its whole behavior, you can use either:\n\n- the `openPickerButton` slot to target the [`IconButton`](/material-ui/api/icon-button/) component.\n- the `inputAdornment` slot to target the [`InputAdornment`](/material-ui/api/input-adornment/) component.",
        ":::warning\nIf you want to track the opening of the picker, you should use the `onOpen` / `onClose` callbacks instead of modifying the opening button:\n\n```tsx\n<DatePicker onOpen={handleOpen} onClose={handleClose} />\n```\n\n:::"
      ],
      "code_path": [
        "CustomPropsOpeningButton.js",
        null
      ],
      "children": []
    },
    {
      "name": "Render the opening button at the start of the input",
      "introduction": [
        "Render the opening button at the start of the input\n\nYou can use the `openPickerButtonPosition` on the `field` slot to position the opening button at the start or the end of the input:"
      ],
      "code_path": [
        "StartEdgeOpeningButton.js"
      ],
      "children": []
    },
    {
      "name": "Add an icon next to the opening button",
      "introduction": [
        "Add an icon next to the opening button\n\nIf you want to add an icon next to the opening button, you can use the `inputAdornment` slot.\nIn the example below, the warning icon will be visible anytime the current value is invalid:",
        "To add the same behavior to a picker that do not have an input adornment (for example Date Range Picker),\nyou need to use the `textField` slot to add one:"
      ],
      "code_path": [
        "AddWarningIconWhenInvalid.js",
        "AddWarningIconWhenInvalidRange.js"
      ],
      "children": []
    }
  ]
}